using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace N2.Security.AspNet.Identity
{
    /// <summary>
    /// <h3>How to setup an ASP.NET MVC project on N2 Dinamico </h3>
    /// <em>The following guide demonstrates how to setup a standard Visual Studio MVC project
    ///     and reuse code, generated by the wizard to build a N2 CMS application. 
    ///     Target audience are advanced developers who want to use 
    ///     the latest Visual Studio generated code in new projects
    ///     or developers that are going to include N2 CMS as part of larger project.
    /// </em>
    /// 
    /// <ul>
    ///  <li>Create new Visual Studio 2013 ASTP.NET MVC project (Individual user Accounts)</li>
    ///  <li>Add resources from N2.Templates.Mvc Dinamico project
    ///   <ul>
    ///    <li>Copy all assembiles from N2.Templates.Mvc Dinamico/bin to project's bin folder
    ///        (N2 loads all assembiles, found in bin directory)
    ///    </li>
    ///    <li>Copy N2.Templates.Mvc Dinamico/x82 and x86 to project folder
    ///        (SqLite interop assembiles)
    ///    </li>
    ///    <li>Add N2.Templates.Mvc Dinamico/Dinamico to project folder</li>
    ///    <li>Add N2 folder from N2.Management to project folder</li>
    ///   </ul>
    ///  </li>
    ///  <li>Remove Entity Framework from genetared project (N2 is based on NHibernate ORM)
    ///    <ul>
    ///     <li>NuGet: remove Microsoft.AspNet.Identity.EntityFramework </li>
    ///     <li>Web.config: remove any residual Entity Framework lines</li>
    ///     <li>project's bin folder: remove Entity Framework assemblies (EntityFramework.dll, 
    ///         EntityFramework.SqlServer.dll, Microsoft.AspNet.Identity.EntityFramework.dll) </li>
    ///    </ul>
    ///  </li>
    ///  <li>Remove Entity Framework related source code
    ///    <ul>
    ///      <li>Models: remove IdentityModels.cs</li>
    ///      <li>Controllers: comment out AccountController's constructors (will be fixed later)</li>
    ///    </ul>
    ///  </li>
    ///  <li>Add N2 libraries</li>
    ///  <ul>
    ///   <li>Standard N2: N2, N2.Extensions, N2.Management, N2.IoC.Windsor, N2.Razor, N2.ReusableParts</li>
    ///   <li>N2.Security.AspNet.Identity</li>
    ///   <li>Web.config: add standard N2 configuration - see Web.sample.config</li>
    ///  </ul>
    ///  <li>Final touches:</li>
    ///  <ul>
    ///   <li>Models: 
    ///    <ul>
    ///     <li>create ApplicationUser.cs<br/>
    ///      <em>You may add your custom properties to this ContentItem to describe user's properties.</em>
    ///      <pre>public class ApplicationUser : N2.AspNet.Identity.ContentUser { } </pre>
    ///     </li>
    ///     <li>create ApplicationUserManager.cs<br/>
    ///      <pre>[Service(typeof(AccountManager), Replaces=typeof(AspnetAccountManager))] 
    ///           public class ApplicationUserManager : AspnetAccountManager<ApplicationUser> { } 
    ///      </pre>
    ///     </li>
    ///    </ul>
    ///   </li>
    ///   <li>AccountController:<br>
    ///     <em>define controller's constructor</em>
    ///     
    ///   </li>
    ///  </ul>
    /// </ul>
    /// </summary>
    internal class HowTo_MvcProject
    {
    }
}
